#!/bin/sh 
#
# Usage: makecomb [install/depend] [nohistory]
#
# if install is given, then ldcmb is run and comb binary
# is overwritten. If an HP machine the binary is named Comb.
#
# if depend is given, then the file 'dependencies' in each
# source directory is constructed.
#
# if nohistory is given then comb is compiled without the
# history mechanism
#
# if no options are given then all source is compiled but not linked
# with ldcmb.
#
# Last Change: Mon Dec  6 18:12:03 EST 1999  
#   automated the history mechanism compilation. MWP
#   test for inttypes.h (linux)

echo comb path is ${COMB}
export PATH=${COMB}/bin:${PATH}

umask 022
run_ldcmb=no   # are we installing?

#
# Default is history is on
#
history=true
today=`date`
cat > ${COMB}/src/main/History.h << YESHISTORY
/* This file is automatically generated on $today. Do not edit.*/
/* HISTORY is 1 if compiling with comb history mechanism ON
 *            0 otherwise
 *            default is ON
 */
#define HISTORY 1
YESHISTORY

case $# in
0)  ;;
*)  for arg in $1 $2
    do
	case $arg in
#
# We must test for existence of gcc here, since dependency files
# are written from redirected stdout (>). The test is done by
# grepping for 'version' in the output of gcc -v (which is written
# to stderr, so must be redirected to stdout!)
#
	depend) if [ $# = 2 ]  && [ $2 = install ]; then
			echo " install and depend are exclusive " ;
			exit 0;
		fi;
		m=`gcc -v 2>&1 | tail -1 | grep -ci version`;
		if test $m -ne 1
		then
			echo You do not have gcc, so you cannot make dependencies.;
			echo Bye;
			exit;
		fi;
		run_ldcmb=d;
		make_option=depend;
		echo Building dependencies;
        if [ ! -x $COMB/bin/entree ]; then
            echo "Building entree" ;
            ( cd $COMB/src/parse/entree; make );
        fi;;
	install) if [ $# = 2 ] && [ $2 = depend ]; then
			echo " install and depend are exclusive " ;
			exit 0;
		 fi;
		 run_ldcmb=yes;;
	nohistory) echo Compiling with history OFF;
		   cat > $COMB/src/main/History.h << NOHISTORY ;;
/* This file is automatically generated on $today. Do not edit.*/
/* HISTORY is 1 if compiling with comb history mechanism ON
 *            0 otherwise
 *            default is ON
 */
#define HISTORY 0
NOHISTORY
	*) echo "Usage: $0 [install | depend] [nohistory]";exit;;
       esac;
   done;;
esac

cd ${COMB}/src

# On some Linux inttypes.h does not exist, and 
# compilation of *.lex.c will fail. In this case,
# let the O/S recreate *.lex.c and hope for the best
#
# NB: solaris 2.6 lex does not include inttypes.h but
#     solaris 2.7 does. argh! So, keep the Solaris 2.6
#     version of P.lex.c around in P.lex.c.sol2.6!
#     Ditto for E.lex.c
#
# - mwp  12/14/99
#if [ ! -f /usr/include/inttypes.h ]; then
#	mv ${COMB}/src/parse/entree/E.lex.c ${COMB}/src/parse/entree/E.lex.c.sv
#	mv ${COMB}/src/parse/P.lex.c ${COMB}/src/parse/P.lex.c.sv
#endif

#-------------------------------------------------
# NB: HISTORY IS NOW DECIDED ON THE COMMAND LINE 
#-------------------------------------------------
# To make comb with a history mechanism, set HISTORY to 1 in $COMB/src/main/C.h
# and comment out the 3rd and 4th lines below (the ones without libedit in
# them).  If  the history mechanism seems not to work, set HISTORY to 0
# and comment out the lines below with libedit in them (and uncomment the other 
# ones)
#--------------------------------

if  [ $history = true ]; then  # history on
    for i in coordsys error graphics image main misc misc/libut misc/libedit\
	parse parse/entree scan2 scan stacks user fits/fitshd
    do
	echo "$i	\c"
	(cd $i;make $make_option)
    done
else # history off
 for i in coordsys error graphics image main misc misc/libut\
	parse parse/entree scan2 scan stacks user fits/fitshd
    do
	echo "$i	\c"
	(cd $i;make $make_option)
    done
fi

cd ${COMB}/src/cmd
for i in *
do
    echo "$i	\c"
    if [ "$i" != "CVS" ]; then
        ( cd $i; make ${i}t_.c; make $make_option; )
    fi;
done

# now decide whether or not to run ldcmb and mvcmb

case $run_ldcmb in
yes) echo  ;echo doing ldcmb...;  $COMB/bin/ldcmb; $COMB/bin/mvcmb;;
no)  echo ;echo ldcmb bypassed - do manually to install cmbt;
	echo then use 'mvcmb' to mv cmbt to [cC]omb;;
d) ;;
esac

exit
